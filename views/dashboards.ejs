<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Satria BIPA</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap"
          rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jsvectormap/dist/css/jsvectormap.min.css" />


    <script>
        tailwind.config = {
            darkMode: "class",
        }
    </script>

    <script>


        function toggleMode() {
            const isDarkMode = document.documentElement.classList.toggle('dark');

            // Update localStorage with the user's preference
            localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');

            // Also update the checkbox based on the mode
            document.getElementById('darkModeToggle').checked = isDarkMode;
        }


        window.onload = function () {
            const theme = localStorage.getItem('theme');
            const checkbox = document.getElementById('darkModeToggle');

            if (theme === 'dark') {
                document.documentElement.classList.add('dark');
                checkbox.checked = true;  // Set the toggle to "checked" for dark mode
            } else {
                document.documentElement.classList.remove('dark');
                checkbox.checked = false;  // Set the toggle to "unchecked" for light mode
            }
        };

    </script>
    <style>
        body {
            font-family: "Plus Jakarta Sans", sans-serif;
        }

        #visitorMap .jvm-legend-inner {
            height:120px;
            overflow-y: scroll;
        }

        body[lang=en-GB]  [lang]:not([lang=en-GB]),
        body[lang=id-ID] [lang]:not([lang=id-ID]),
        body[lang=zh-CN] [lang]:not([lang=zh-CN])
        {
            display: none;
        }
    </style>
</head>

<body class="overflow-x-hidden text-black transition duration-75 bg-gray-100 dark:bg-gray-700 dark:text-white">

<%- include('partials/header') %>

<main class="m-2 mt-20">

    <section class="scroll-mt-50">

        <div class="container px-6 mx-auto grid">
            <h2 class="my-6 text-2xl font-semibold text-gray-700 dark:text-white">
                Dasbor
            </h2>

            <div class="grid gap-6 my-3 md:grid-cols-2 xl:grid-cols-3 lg:grid-cols-3 sm:grid-cols-2">
                <div class="flex items-center p-4 bg-white dark:bg-gray-800 rounded-lg shadow-xs">
                    <div class="p-3 mr-4 text-blue-500 bg-blue-100 rounded-full">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"></path>
                        </svg>
                    </div>
                    <div>
                        <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-200"> Total Interaksi</p>
                        <p id="total-chats" class="text-lg font-semibold text-gray-700 dark:text-gray-100"> memuat... </p>
                    </div>
                </div>

                <div class="flex items-center p-4 bg-white dark:bg-gray-800 rounded-lg shadow-xs">
                    <div class="p-3 mr-4 text-green-500 bg-green-100 rounded-full">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path  d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"></path>
                        </svg>
                    </div>
                    <div>
                        <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-200"> Pengguna Aktif </p>
                        <p id="total-users" class="text-lg font-semibold text-gray-700 dark:text-gray-100"> memuat... </p>
                    </div>
                </div>

                <div class="flex items-center p-4 bg-white dark:bg-gray-800 rounded-lg shadow-xs">
                    <div class="p-3 mr-4 text-red-500 bg-red-100 rounded-full">
                        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                            <path  d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"> </path>
                        </svg>
                    </div>
                    <div>
                        <p class="mb-2 text-sm font-medium text-gray-600 dark:text-gray-200"> Total Histori yang dibuat </p>
                        <p id="total-historys" class="text-lg font-semibold text-gray-700 dark:text-gray-100"> memuat... </p>
                    </div>
                </div>
            </div>
        </div>



        <div class="container px-6 mx-auto grid">

            <div class="grid gap-6 md:grid-cols-2 xl:grid-cols-2 lg:grid-cols-2 sm:grid-cols-1">

                <div class="relative flex flex-col my-3 bg-white dark:bg-gray-800 shadow-xs rounded-lg">
                    <div class="mx-3 mb-0 border-b border-slate-200 dark:border-slate-200/10 py-5 px-5">
                        <span class="text-md font-medium text-gray-600 dark:text-gray-200">Jumlah Pengguna</span>
                    </div>

                    <div class="p-4">
                        <div class="grid gap-6 md:grid-cols-2 xl:grid-cols-4">
                            <canvas id="chartjs-0" width="400" height="100" aria-label="Hello ARIA World" role="img"></canvas>
                        </div>
                    </div>
                </div>

                <div class="relative flex flex-col my-3 bg-white dark:bg-gray-800 shadow-xs rounded-lg">
                    <div class="mx-3 mb-0 border-b border-slate-200 dark:border-slate-200/10 py-5 px-5">
                        <span class="text-md font-medium text-gray-600 dark:text-gray-200" >Aktivitas Terbaru</span>
                    </div>

                    <nav class="flex min-w-[240px] flex-col gap-1 p-1.5" id="user-new-activity">
                        <p class="text-lg font-semibold text-gray-700 dark:text-gray-100"> memuat... </p>
                    </nav>
                </div>

            </div>
        </div>


        <div class="container px-6 mx-auto grid">

            <div class="grid gap-6 md:grid-cols-2 xl:grid-cols-2 lg:grid-cols-2 sm:grid-cols-1">

                <div class="relative flex flex-col my-3 bg-white dark:bg-gray-800 shadow-xs rounded-lg">
                    <div class="mx-3 mb-0 border-b border-slate-200 dark:border-slate-200/10 py-5 px-5">
                        <span class="text-md font-medium text-gray-600 dark:text-gray-200">Sebaran Asal Negara Pengguna</span>
                    </div>

                    <div class="p-4 text-gray-800" style="width: auto; height: 350px">
                        <div id="visitorMap" ></div>
                    </div>
                </div>

                <div class="relative flex flex-col my-3 bg-white dark:bg-gray-800 shadow-xs rounded-lg">
                    <div class="mx-3 mb-0 border-b border-slate-200 dark:border-slate-200/10 py-5 px-5">
                        <span class="text-md font-medium text-gray-600 dark:text-gray-200" >Papan Peringkat Negara</span>
                    </div>

                    <div class="overflow-x-auto m-5">
                        <table class="table-fixed w-full text-left border-collapse">
                            <thead>
                                <tr class="bg-gray-100 dark:bg-gray-700">
                                    <th class="px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-300">Peringkat</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-300">Negara</th>
                                    <th class="px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-300">Total Pengguna</th>
                                </tr>
                            </thead>
                            <tbody id="leaderboard-body" class="text-gray-700 dark:text-gray-100"></tbody>
                        </table>

                        <div class="flex justify-between items-center px-4 py-3">
                            <div class="text-sm text-gray-700 dark:text-gray-100" id="datatable-page-number"></div>

                            <div class="flex space-x-1">
                                <button class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal dark:text-gray-300 text-gray-600 dark:bg-slate-700 bg-slate-100 hover:bg-slate-300 dark:hover:bg-slate-600 border dark:border-slate-800 rounded  dark:hover:border-slate-600 transition duration-200 ease">
                                    Prev
                                </button>
                                <div id="datatable-navigation" class="flex space-x-1"></div>
                                <button class="px-3 py-1 min-w-9 min-h-9 text-sm font-normal dark:text-gray-300 text-gray-600 dark:bg-slate-700 bg-slate-100 hover:bg-slate-300 dark:hover:bg-slate-600 border dark:border-slate-800 rounded  dark:hover:border-slate-600 transition duration-200 ease">
                                    Next
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container px-6 mx-auto grid">
            <div class="my-6">
                <button onclick="window.location.href = '/chats'" class="flex items-center rounded-md border border-slate-300 py-2 px-4 text-center text-sm transition-all shadow-sm hover:shadow-lg text-slate-700 dark:text-slate-300 hover:text-white dark:hover:text-slate-800 hover:bg-slate-800 dark:bg-gray-800 bg-white dark:hover:bg-slate-200 hover:border-slate-800 focus:text-white focus:bg-slate-800 focus:border-slate-800 active:border-slate-800 active:text-white active:bg-slate-800 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                    </svg>
                    Kembali
                </button>
            </div>
        </div>
    </section>
</main>

<%- include('partials/footer') %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jsvectormap"></script>
<script src="https://cdn.jsdelivr.net/npm/jsvectormap/dist/maps/world.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', async function () {
        const totalUsersElement = document.getElementById('total-users');
        const totalPesan = document.getElementById('total-chats');
        const totalRiwayat = document.getElementById('total-historys');
        const totalBotResponse = document.getElementById('total-bots-responses');
        const userActivity = document.getElementById('user-new-activity');
        const leaderboardBody = document.getElementById('leaderboard-body');
        let leaderboardData = null;
        let codeAndCountry = {};
        let countryAndColor = {};

        const token_jwt = sessionStorage.getItem('token');
        try {
            await runBarChart();
            await newActivity();
            await getCountryLeaderboard(0);
            implementDatatable(leaderboardData);
            await renderMap();

            const [totalActive, TotalPesan, totalHistory] = await Promise.all([
                fetch('/active-users',{
                    method: 'GET',
                    headers: {
                    'Content-Type': 'application/json',
                    'Authorization': token_jwt
                    }
                }),

                fetch('/total-chats', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                }),
                fetch('/total-history', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                })
            ])
            
            if (!totalActive.ok || !TotalPesan.ok || !totalHistory.ok) {
                throw new Error('Failed to fetch one or more resources');
            }
            const activeUsersData = await totalActive.json();
            const totalPesanData = await TotalPesan.json();
            const totalHistoryData = await totalHistory.json();

            totalUsersElement.textContent = activeUsersData; 
            totalPesan.textContent = totalPesanData;
            totalRiwayat.textContent = totalHistoryData;
        } catch (error) {
            console.error('Error fetching data:', error);
            document.getElementById('total-users').textContent = 'Error';
        }


        async function newActivity(){
            try{
                const response = await fetch(`/recent-login`,{
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                })
                const data = await response.json();
                let html = '';
                data.forEach((item, index) => {
                    const loginAt = item.loginAt
                    const hours = loginAt[3] < 10 ? '0' + loginAt[3] : loginAt[3]
                    const minutes = loginAt[4] < 10 ? '0' + loginAt[4] : loginAt[4]
                    const seconds = loginAt[5] < 10 ? '0' + loginAt[5] : loginAt[5]
                    const strDate = `${loginAt[0]}-${loginAt[1]}-${loginAt[2]} ${hours}:${minutes}:${seconds}`
                    const date = new Date(strDate);
                    const dateOptions = {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                    }

                    html += `<div role="button"  class="text-slate-800 flex w-full items-center rounded-md p-3 transition-all hover:bg-slate-100 dark:hover:bg-slate-700 focus:bg-slate-100 dark:focus:bg-slate-700 active:bg-slate-100 dark:active:bg-slate-700"
                        >
                            <div class="p-3 mr-4 text-green-500 bg-green-100 rounded-full">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                          <path stroke-linecap="round" stroke-linejoin="round" d="M17.982 18.725A7.488 7.488 0 0 0 12 15.75a7.488 7.488 0 0 0-5.982 2.975m11.963 0a9 9 0 1 0-11.963 0m11.963 0A8.966 8.966 0 0 1 12 21a8.966 8.966 0 0 1-5.982-2.275M15 9.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                        </svg>

                    </div>
                            <div>
                                <div class="flex flex-row justify-between">
                                    <h6 class="text-slate-800 dark:text-slate-200 font-medium text-sm"> ${item.username}</h6>
                                    <div class="relative grid items-center px-2 py-1 font-sans text-xs font-bold text-gray-900 dark:text-gray-300 uppercase rounded-full select-none whitespace-nowrap bg-gray-900/10 dark:bg-gray-600">
                                        <span class="">${date.toLocaleDateString('id-ID', dateOptions)}</span>
                                    </div>
                                </div>

                                <p class="text-slate-500 dark:text-slate-400 text-xs"> Aktif sejak ${hours}:${minutes} </p>
                            </div>
                        </div>`
                })
                return userActivity.innerHTML = html;
                if (!response.ok) {
                    throw new Error('Gagal mengambil daftar chat');
                }
            }catch (error) {
                console.error(error);
            }
        }

        function resetDatatableBtn(){
            leaderboardData.content.forEach((item, index) => {
                document.getElementById(`datatable-nav-btn-${index}`).className = 'px-3 py-1 min-w-9 min-h-9 text-sm font-normal dark:text-gray-300 text-gray-600 dark:bg-slate-700 bg-slate-100 hover:bg-slate-300 dark:hover:bg-slate-600 border dark:border-slate-800 rounded  dark:hover:border-slate-600 transition duration-200 ease';
            })
        }

        function implementDatatable(data){
            const datatableNav = document.getElementById('datatable-navigation');
            datatableNav.innerHTML = '';
            for(let i=0; i<data.totalPages; i++){
                const btn = document.createElement('button');
                btn.className = 'px-3 py-1 min-w-9 min-h-9 text-sm font-normal dark:text-gray-300 text-gray-600 dark:bg-slate-700 bg-slate-100 hover:bg-slate-300 dark:hover:bg-slate-600 border dark:border-slate-800 rounded  dark:hover:border-slate-600 transition duration-200 ease';
                btn.id = `datatable-nav-btn-${i}`;
                btn.textContent = `${i+1}`;
                btn.addEventListener('click', function (event) {
                    event.preventDefault();
                    getCountryLeaderboard(i);
                });
                datatableNav.appendChild(btn);
            }
        }

        async function getCountryLeaderboard(page){
            try{
                const response = await fetch(`/user-active?sortBy=count&direction=desc&page=${page}&size=5`,{
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                })
                leaderboardData = await response.json();
                updateTableLeaderboard(leaderboardData);

                if (!response.ok) {
                    throw new Error('Gagal mengambil daftar chat');
                }
            }catch (error) {
                console.error(error);
            }
        }

        function updateTableLeaderboard(data){
            let html = '';
            const countData = data.content;
            const pageNumber = data.pageable.pageNumber;
            const pageSize = data.pageable.pageSize;
            const totalEl = data.totalElements;

            const min = pageNumber*pageSize + 1;
            let max = min + pageSize - 1;
            max = max > totalEl ? totalEl : max;
            document.getElementById('datatable-page-number').innerHTML = `Showing ${min}-${max} of ${data.totalElements}`;

            countData.forEach((item, index) => {
                html += `<tr class="border-b dark:border-slate-600">
                                    <td class="px-4 py-2 text-xs">${index+1 + pageNumber*pageSize}</td>
                                    <td class="px-4 py-2 text-xs">${item.country}</td>
                                    <td class="px-4 py-2 text-xs">${item.count}</td>
                                </tr>`
            })
            return leaderboardBody.innerHTML = html;
        };

        async function renderMap(){
            try{
                const response = await fetch(`/user-active?sortBy=country&direction=asc&page=0&size=500`,{
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                })
                let data = await response.json();
                data = data.content;
                codeAndCountry = data.reduce((item, {country}) => {
                    let code = findCountryCodeByName(country);
                    item[code] = item[country] || country;
                    return item;
                }, {});

                countryAndColor = data.reduce((item, {country}) => {
                    const randomColor = '#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');
                    item[country] = item[country] || `${randomColor}`;
                    return item
                }, {});

                await viewMap(countryAndColor, codeAndCountry);
                if (!response.ok) {
                    throw new Error('Gagal mengambil daftar chat');
                }
            }catch (error) {
                console.error(error);
            }
        }

        async function viewMap(countryAndColor = {}, codeAndCountry = {}){
            return new jsVectorMap({
                selector: "#visitorMap",
                map: "world",
                backgroundColor: '#ffffff',
                borderColor: '#f2f2f2',
                borderOpacity: .8,
                borderWidth: 1,
                hoverColor: '#000',
                hoverOpacity: .8,
                color: '#ddd',
                normalizeFunction: 'linear',
                selectedRegions: false,
                showTooltip: true,
                series: {
                    regions: [{
                        attribute: "fill",
                        legend: {
                            title: 'Negara',
                        },
                        scale: countryAndColor,
                        values: codeAndCountry
                    }]

                }
            });
        }

        async function getUserCreated(year, month){
            try{
                const response = await fetch(`/user-register-count?year=${year}&month=${month}`,{
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': token_jwt
                    }
                })
                const data = await response.json();
                return data;
                if (!response.ok) {
                    throw new Error('Gagal mengambil daftar chat');
                }
            }catch (error) {
                console.error(error);
            }
        }

        async function runBarChart(){
            const year = new Date().getFullYear()
            let dataArr = [];
            for(let i=0; i<12; i++){
                dataArr[i] = await getUserCreated(year, i+1)
            }
            new Chart(document.getElementById("chartjs-0"), {
                "type": "bar",
                "data": {
                    "labels": ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni',
                    'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'
                    ],
                    "datasets": [ //
                        {
                            "label": "Pengguna",
                            "data": dataArr,
                            "fill": true,
                            "backgroundColor": "rgba(255, 99, 132, 0.2)",
                            "borderColor": "rgb(255, 99, 132)",
                            "borderWidth": 1
                        }
                    ]
                },
                "options": chartOptions
            });
        }

    });

    function findCountryCodeByName (name){
        return Object.keys(countryCodes).find(key => countryCodes[key] === name);
    }

    const chartOptions = {
        "scales": {
            "yAxes": [{
                "ticks": {
                    "beginAtZero": true,
                    callback: function(value, index, values) {
                        return value.toLocaleString(
                            "id-ID", {
                                style: "currency",
                                currency: "IDR"
                            }
                        );
                    }
                }
            }]
        },
        "tooltips": {
            callbacks: {
                label: function(tooltipItem, data) {
                    return tooltipItem.yLabel
                        .toLocaleString(
                            "id-ID", {
                                style: "currency",
                                currency: "IDR"
                            });
                }
            }
        }
    };


    const countryCodes = {
        "AF": "Afghanistan",
        "AX": "Aland Islands",
        "AL": "Albania",
        "DZ": "Algeria",
        "AS": "American Samoa",
        "AD": "Andorra",
        "AO": "Angola",
        "AI": "Anguilla",
        "AQ": "Antarctica",
        "AG": "Antigua And Barbuda",
        "AR": "Argentina",
        "AM": "Armenia",
        "AW": "Aruba",
        "AU": "Australia",
        "AT": "Austria",
        "AZ": "Azerbaijan",
        "BS": "Bahamas",
        "BH": "Bahrain",
        "BD": "Bangladesh",
        "BB": "Barbados",
        "BY": "Belarus",
        "BE": "Belgium",
        "BZ": "Belize",
        "BJ": "Benin",
        "BM": "Bermuda",
        "BT": "Bhutan",
        "BO": "Bolivia",
        "BA": "Bosnia And Herzegovina",
        "BW": "Botswana",
        "BV": "Bouvet Island",
        "BR": "Brazil",
        "IO": "British Indian Ocean Territory",
        "BN": "Brunei Darussalam",
        "BG": "Bulgaria",
        "BF": "Burkina Faso",
        "BI": "Burundi",
        "KH": "Cambodia",
        "CM": "Cameroon",
        "CA": "Canada",
        "CV": "Cabo Verde",
        "KY": "Cayman Islands",
        "CF": "Central African Republic",
        "TD": "Chad",
        "CL": "Chile",
        "CN": "China",
        "CX": "Christmas Island",
        "CC": "Cocos (Keeling) Islands",
        "CO": "Colombia",
        "KM": "Comoros",
        "CG": "Congo",
        "CD": "Congo, Democratic Republic",
        "CK": "Cook Islands",
        "CR": "Costa Rica",
        "CI": "Cote D\"Ivoire",
        "HR": "Croatia",
        "CU": "Cuba",
        "CY": "Cyprus",
        "CZ": "Czech Republic",
        "DK": "Denmark",
        "DJ": "Djibouti",
        "DM": "Dominica",
        "DO": "Dominican Republic",
        "EC": "Ecuador",
        "EG": "Egypt",
        "SV": "El Salvador",
        "GQ": "Equatorial Guinea",
        "ER": "Eritrea",
        "EE": "Estonia",
        "ET": "Ethiopia",
        "FK": "Falkland Islands (Malvinas)",
        "FO": "Faroe Islands",
        "FJ": "Fiji",
        "FI": "Finland",
        "FR": "France",
        "GF": "French Guiana",
        "PF": "French Polynesia",
        "TF": "French Southern Territories",
        "GA": "Gabon",
        "GM": "Gambia",
        "GE": "Georgia",
        "DE": "Germany",
        "GH": "Ghana",
        "GI": "Gibraltar",
        "GR": "Greece",
        "GL": "Greenland",
        "GD": "Grenada",
        "GP": "Guadeloupe",
        "GU": "Guam",
        "GT": "Guatemala",
        "GG": "Guernsey",
        "GN": "Guinea",
        "GW": "Guinea-Bissau",
        "GY": "Guyana",
        "HT": "Haiti",
        "HM": "Heard Island & Mcdonald Islands",
        "VA": "Vatican City",
        "HN": "Honduras",
        "HK": "Hong Kong",
        "HU": "Hungary",
        "IS": "Iceland",
        "IN": "India",
        "ID": "Indonesia",
        "IR": "Iran",
        "IQ": "Iraq",
        "IE": "Ireland",
        "IM": "Isle Of Man",
        "IL": "Israel",
        "IT": "Italy",
        "JM": "Jamaica",
        "JP": "Japan",
        "JE": "Jersey",
        "JO": "Jordan",
        "KZ": "Kazakhstan",
        "KE": "Kenya",
        "KI": "Kiribati",
        "KR": "Korea",
        "KP": "North Korea",
        "KW": "Kuwait",
        "KG": "Kyrgyzstan",
        "LA": "Laos",
        "LV": "Latvia",
        "LB": "Lebanon",
        "LS": "Lesotho",
        "LR": "Liberia",
        "LY": "Libya",
        "LI": "Liechtenstein",
        "LT": "Lithuania",
        "LU": "Luxembourg",
        "MO": "Macao",
        "MK": "North Macedonia",
        "MG": "Madagascar",
        "MW": "Malawi",
        "MY": "Malaysia",
        "MV": "Maldives",
        "ML": "Mali",
        "MT": "Malta",
        "MH": "Marshall Islands",
        "MQ": "Martinique",
        "MR": "Mauritania",
        "MU": "Mauritius",
        "YT": "Mayotte",
        "MX": "Mexico",
        "FM": "Micronesia",
        "MD": "Moldova",
        "MC": "Monaco",
        "MN": "Mongolia",
        "ME": "Montenegro",
        "MS": "Montserrat",
        "MA": "Morocco",
        "MZ": "Mozambique",
        "MM": "Myanmar",
        "NA": "Namibia",
        "NR": "Nauru",
        "NP": "Nepal",
        "NL": "Netherlands",
        "AN": "Netherlands Antilles",
        "NC": "New Caledonia",
        "NZ": "New Zealand",
        "NI": "Nicaragua",
        "NE": "Niger",
        "NG": "Nigeria",
        "NU": "Niue",
        "NF": "Norfolk Island",
        "MP": "Northern Mariana Islands",
        "NO": "Norway",
        "OM": "Oman",
        "PK": "Pakistan",
        "PW": "Palau",
        "PS": "Palestine",
        "PA": "Panama",
        "PG": "Papua New Guinea",
        "PY": "Paraguay",
        "PE": "Peru",
        "PH": "Philippines",
        "PN": "Pitcairn",
        "PL": "Poland",
        "PT": "Portugal",
        "PR": "Puerto Rico",
        "QA": "Qatar",
        "RE": "Reunion",
        "RO": "Romania",
        "RU": "Russia",
        "RW": "Rwanda",
        "BL": "Saint Barthelemy",
        "SH": "Saint Helena",
        "KN": "Saint Kitts And Nevis",
        "LC": "Saint Lucia",
        "MF": "Saint Martin",
        "PM": "Saint Pierre And Miquelon",
        "VC": "Saint Vincent And the Grenadines",
        "WS": "Samoa",
        "SM": "San Marino",
        "ST": "Sao Tome And Principe",
        "SA": "Saudi Arabia",
        "SN": "Senegal",
        "RS": "Serbia",
        "SC": "Seychelles",
        "SL": "Sierra Leone",
        "SG": "Singapore",
        "SK": "Slovakia",
        "SI": "Slovenia",
        "SB": "Solomon Islands",
        "SO": "Somalia",
        "ZA": "South Africa",
        "GS": "South Georgia And Sandwich Isl.",
        "ES": "Spain",
        "LK": "Sri Lanka",
        "SD": "Sudan",
        "SS": "South Sudan",
        "SR": "Suriname",
        "SJ": "Svalbard And Jan Mayen",
        "SZ": "Eswatini",
        "SE": "Sweden",
        "CH": "Switzerland",
        "SY": "Syria",
        "TW": "Taiwan",
        "TJ": "Tajikistan",
        "TZ": "Tanzania",
        "TH": "Thailand",
        "TL": "Timor Leste",
        "TG": "Togo",
        "TK": "Tokelau",
        "TO": "Tonga",
        "TT": "Trinidad And Tobago",
        "TN": "Tunisia",
        "TR": "Turkiye",
        "TM": "Turkmenistan",
        "TC": "Turks And Caicos Islands",
        "TV": "Tuvalu",
        "UG": "Uganda",
        "UA": "Ukraine",
        "AE": "United Arab Emirates",
        "GB": "United Kingdom",
        "US": "United States",
        "UM": "United States Outlying Islands",
        "UY": "Uruguay",
        "UZ": "Uzbekistan",
        "VU": "Vanuatu",
        "VE": "Venezuela",
        "VN": "Vietnam",
        "VG": "Virgin Islands, British",
        "VI": "Virgin Islands, U.S.",
        "WF": "Wallis And Futuna",
        "EH": "Western Sahara",
        "YE": "Yemen",
        "ZM": "Zambia",
        "ZW": "Zimbabwe"
    }


</script>

</body>