<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Daftar Akun - Satria BIPA</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@200..800&display=swap" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link id="sweetalert2-theme" rel="stylesheet">

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // List of countries
      const countries = [
        "Afghanistan", "Albania", "Algeria", "Andorra", "Angola",
        "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan",
        "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus",
        "Belgium", "Belize", "Benin", "Bhutan", "Bolivia",
        "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei Darussalam", "Bulgaria",
        "Burkina Faso", "Burundi", "Cabo Verde", "Cambodia", "Cameroon",
        "Canada", "Central African Republic", "Chad", "Chile", "China",
        "Colombia", "Comoros", "Congo","Congo, Democratic Republic", "Costa Rica", "Croatia",
        "Cuba", "Cyprus", "Czech Republic", "Denmark", "Djibouti",
        "Dominica", "Dominican Republic", "Ecuador", "Egypt",
        "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini",
        "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia",
        "Georgia", "Germany", "Ghana", "Greece", "Grenada",
        "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti",
        "Honduras",'Hong Kong', "Hungary", "Iceland", "India", "Indonesia",
        "Iran", "Iraq", "Ireland", "Israel", "Italy",
        "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan",
        "Kenya", "Kiribati", "Kuwait", "Kyrgyzstan", "Laos",
        "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya",
        "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi",
        "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands",
        "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova",
        "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique",
        "Myanmar", "Namibia", "Nauru", "Nepal", "Netherlands", 'Netherlands Antilles',
        "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea",
        "North Macedonia", "Norway", "Oman", "Pakistan", "Palau", "Palestine",
        "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines",
        "Poland", "Portugal", "Puerto Rico", "Qatar", "Romania", "Russia",
        "Rwanda", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa",
        "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia",
        "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia",
        "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan",
        "Spain", "Sri Lanka", "Sudan", "Suriname", "Sweden",
        "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania",
        "Thailand", "Timor Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia",
        "Turkiye", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine",
        "United Arab Emirates", "United Kingdom", "United States", "Uruguay",
        "Uzbekistan", "Vanuatu", "Vatican City", "Venezuela", "Vietnam",
        "Yemen", "Zambia", "Zimbabwe"
      ];

      // Get the dropdown element
      const countrySelect = document.getElementById("country");
      const mainContainer = document.getElementById("main-container");

      // Loop to add options to the dropdown
      countries.forEach(country => {
        let option = document.createElement("option");
        option.value = country;
        option.textContent = country;
        countrySelect.appendChild(option);
      });

      // Move the container down on focus
      document.addEventListener("DOMContentLoaded", function() {
        countrySelect.addEventListener("focus", () => {
          mainContainer.classList.add("mt-32"); // Adjust the margin as needed
        });
      });

      // Reset the margin when the dropdown loses focus
      document.addEventListener("DOMContentLoaded", function() {
        countrySelect.addEventListener("blur", () => {
          mainContainer.classList.remove("mt-32");
        });
      });
      
    });

    const setSweetAlertTheme = () => {
      const isDark = localStorage.getItem("theme");
      const themeLink = document.getElementById('sweetalert2-theme');

      if (isDark === "dark") {
        themeLink.href = "https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css";
      } else {
        themeLink.href = "";  // Tema default
      }
    };

  </script>

  <style>
    body {
      font-family: "Plus Jakarta Sans", sans-serif;
    }
    /* Custom styles for the select element */
    #country {
      height: 40px; /* Adjust the height as needed */
    }

    body[lang=en-GB]  [lang]:not([lang=en-GB]),
    body[lang=id-ID] [lang]:not([lang=id-ID]),
    body[lang=zh-HANT] [lang]:not([lang=zh-HANT]),
    body[lang=zh-HANS] [lang]:not([lang=zh-HANS])
    {
      display: none;
    }
  </style>
</head>

<body class="bg-white dark:bg-gray-800 dark:text-white flex items-center justify-center min-h-screen">
  <%- include('partials/header') %>

  <main class="flex items-center justify-center w-full h-600 p-0 border-gray dark:border-gray-700 mt-16">
    <div class="flex-1 flex items-center justify-center p-8">
      <form id="register-form" class="w-full max-w-sm">
        <h1 class="text-2xl font-bold text-center mb-6 dark:text-white"><%= i18n.t("register.title")%></h1>
        <div class="mb-4">
          <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="username"><%= i18n.t("register.username")%></label>
          <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="username" id="username" type="text" placeholder="<%= i18n.t("register.username")%>">
        </div>
        <div class="mb-4">
          <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="email"><%= i18n.t("register.email")%></label>
          <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline" name="email" id="register-email" type="email" placeholder="<%= i18n.t("register.email")%>">
        </div>
        <div class="mb-6 mt-8"> <!-- Increased margin top for spacing -->
          <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="country"><%= i18n.t("register.country")%></label>
          <select name="country" id="country" class="shadow appearance-none border rounded w-full py-1 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <option value="" disabled selected><%= i18n.t("register.choose-country")%></option>
          </select>
        </div>
        <div class="mb-6">
          <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="password"><%= i18n.t("register.password")%></label>
          <div class="relative">
              <input name="password"
                  class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
                  id="register-password"
                  type="password"
                  placeholder="********">
              <!-- Icon Mata -->
              <img id="toggle-password"
                  src="/images/eye-close.svg"
                  alt="Toggle Password"
                  class="absolute right-3 top-3 cursor-pointer w-5 h-5">
          </div>
          <p class="text-red-500 dark:text-gray-400 text-sm mt-1">
            <%= i18n.t("register.password-caption")%>
          </p>          
        </div>
        <div class="mb-6">
            <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="confirm-password"><%= i18n.t("register.confirm-password")%></label>
            <div class="relative">
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
                    id="confirm-password"
                    type="password"
                    placeholder="********">
                <!-- Icon Mata -->
                <img id="toggle-confirm-password"
                    src="/images/eye-close.svg"
                    alt="Toggle Confirm Password"
                    class="absolute right-3 top-3 cursor-pointer w-5 h-5">
            </div>
        </div>
        <div class="flex items-center justify-between">
          <button class="bg-black text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full" type="submit"><%= i18n.t("register.register")%></button>
        </div>
        <div class="text-center">
          <a href="/login" class="text-blue-500 dark:text-blue-300 hover:text-blue-700 dark:hover:text-blue-500 text-md"><%= i18n.t("register.already-have-account")%></a>
        </div>
      </form>
    </div>
  </main>

  <!-- Gambar versi desktop yang hanya muncul di layar md ke atas -->
  <img src="/images/Gatot Kaca.png" class="hidden md:block h-auto w-36 md:w-96 absolute bottom-0 md:-bottom-24 right-0 md:right-0 md:fixed" alt="Maskot Satria BIPA">

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
  <script>
    function togglePasswordVisibility(inputId, iconId) {
      const input = document.getElementById(inputId);
      const icon = document.getElementById(iconId);

      // Toggle input type between password and text
      const isPassword = input.type === "password";
      input.type = isPassword ? "text" : "password";

      // Change icon based on input type
      icon.src = isPassword ? "/images/eye-open.svg" : "/images/eye-close.svg";
    }

    document.getElementById("toggle-password").addEventListener("click", function () {
        togglePasswordVisibility("register-password", "toggle-password");
    });

    document.getElementById("toggle-confirm-password").addEventListener("click", function () {
        togglePasswordVisibility("confirm-password", "toggle-confirm-password");
    });
    const token = sessionStorage.getItem('token');
    if (token) {
      Swal.fire({
        title: `<%= i18n.t("register.message.login-success.title")%>`,
        text: `<%= i18n.t("register.message.login-success.text")%>`,
        icon: 'success',
        confirmButtonText: 'OK'
      }).then(() => {
        window.location.href = '/index';
      });
    }
    document.getElementById('register-form').addEventListener('submit', async function (event) {
        event.preventDefault();

        let valid = false;
        const username = document.getElementById('username').value;
        const email = document.getElementById('register-email').value;
        const country = document.getElementById('country').value;
        const password = document.getElementById('register-password').value;
        const confirmPassword = document.getElementById('confirm-password').value;

        if (!username || !email || !country || !password || !confirmPassword) {
          Swal.fire({
            text: `<%= i18n.t("register.message.all-fields-filled")%>`,
            icon: "warning"
          });
          return;
        }

        try {
          const response = await fetch(`/verify-email?email=${email}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          });
          const data = await response.json();
          const status = data.data.status;

          if (status=="valid") {
              valid = true;
              Swal.fire({
                text: `<%= i18n.t("register.message.success-email-verif")%>`,
                icon: "success",
                confirmButtonColor: '#7066e0'
              });
            } else {
              Swal.fire({
                text: `<%= i18n.t("register.message.failed-email-verif")%>`,
                icon: "error",
                confirmButtonColor: '#7066e0'
              });
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
              text: `<%= i18n.t("register.message.error-email-verif")%>`,
              icon: "error",
              confirmButtonColor: '#7066e0'
            });
        }

        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/;

        if (password.length < 8) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-8-char")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (!/[a-z]/.test(password)) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-lowercase")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (!/[A-Z]/.test(password)) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-uppercase")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (!/\d/.test(password)) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-number")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (!/[!@#$%^&*]/.test(password)) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-symbol")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (!passwordRegex.test(password)) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-invalid")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
        if (password !== confirmPassword) {
          Swal.fire({
            text: `<%= i18n.t("register.message.pass-confirm-same")%>`,
            icon: "error",
            confirmButtonColor: '#7066e0'
          });
          return;
        }

        const data = {
          email: email,
          username: username,
          password: password,
          country: country,
        };

        if (valid == true) {
          try {
            const response = await fetch('/api/register', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data),
            });
            if (response.ok) {
                const responseData = await response.json();
                console.log(`<%= i18n.t("register.message.register-success")%>`, responseData);
                window.location.href = '/verify';
            } else {
                const errorData = await response.json();
                Swal.fire({
                  text: errorData.message,
                  icon: "error",
                  confirmButtonColor: '#7066e0'
                });
            }
          } catch (error) {
            Swal.fire({
              text: `<%= i18n.t("register.message.register-error")%>`,
              icon: "error",
              confirmButtonColor: '#7066e0'
            });
          }
        } else {
          Swal.fire({
            text: `<%= i18n.t("register.message.email-invalid")%>`,
            icon: "error",
            confirmButtonColor: '#7066e0'
          });
        }
      });
  </script>
</body>

</html>
