<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Atur Ulang Sandi Satria BIPA</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      tailwind.config = {
        darkMode: "class",
      };
    </script>
    <script>
      // Function to initialize and toggle dark mode
      function initMode() {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      }

      function toggleMode() {
        if (document.documentElement.classList.contains("dark")) {
          document.documentElement.classList.remove("dark");
          localStorage.theme = "light";
        } else {
          document.documentElement.classList.add("dark");
          localStorage.theme = "dark";
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        const burgerMenu = document.getElementById("burger-menu");
        const navLinks = document.getElementById("navbar-default");

        if (burgerMenu) { // Tambahkan kondisi ini
          burgerMenu.addEventListener("click", () => {
            navLinks.classList.toggle("hidden");
          });
        }

        initMode();
      });

    </script>

    <style>
      body {
        font-family: "Plus Jakarta Sans", sans-serif;
      }

      .login-btn:hover svg path{
        fill: white;
      }

      body[lang=en-GB]  [lang]:not([lang=en-GB]),
      body[lang=id-ID] [lang]:not([lang=id-ID]),
      body[lang=zh-CN] [lang]:not([lang=zh-CN])
      {
        display: none;
      }
    </style>
  </head>

  <body class="bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 flex items-center justify-center min-h-screen">
  <%- include('partials/header') %>
    <main class=" dark:bg-gray-800 flex items-center justify-center w-full h-600 p-0 dark:border-gray-700 mt-12">
      <div class="relative flex flex-col md:flex-row w-full h-full border-l border-r border-gray dark:border-gray-700 bg-[url(/images/batik-bg.jpg)] dark:bg-none bg-cover ">
        <!-- Bagian kiri untuk form login -->
        <div class="flex-1 flex items-center justify-center p-8">
          <div id="verifikasi-token-form" class="w-full max-w-sm">
            <h2 class="text-3xl font-bold mb-6 text-center mt-5 dark:text-white">Verifikasi Token</h2>

            <div class="flex items-center justify-between">
              <button id="verifikasi-token-form" class="bg-black dark:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full" type="submit">Verifikasi</button>
            </div>
          </div>

          <form id="reset-password-form" class="w-full max-w-sm">
            <h2 class="text-3xl font-bold mb-6 text-center mt-5 dark:text-white">Atur ulang sandi</h2>

            <div class="mb-6">
              <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="reset-password">Sandi</label>
              <div class="relative">
                <input name="password" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="reset-password" type="password" placeholder="********">
                <img id="toggle-password"
                     src="/images/eye-close.svg"
                     alt="Toggle Password"
                     class="absolute right-3 top-3 cursor-pointer w-5 h-5">
              </div>
              <p class="text-gray-500 dark:text-gray-400 text-sm mt-1">
                Kata sandi harus memiliki minimal 8 karakter, terdiri atas huruf kapital, huruf kecil, angka, dan salah satu simbol berikut:
                ! @ # $ % ^ & *
              </p>
            </div>
            <div class="mb-6">
              <label class="block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2" for="confirm-reset-password">Konfirmasi Sandi</label>
              <div class="relative">
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-200 dark:bg-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline" id="confirm-reset-password" type="password" placeholder="********">
                <img id="toggle-confirm-password"
                     src="/images/eye-close.svg"
                     alt="Toggle Confirm Password"
                     class="absolute right-3 top-3 cursor-pointer w-5 h-5">
              </div>
            </div>

            <div class="flex items-center justify-between">
              <button class="bg-black dark:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full" type="submit">Atur Ulang</button>
            </div>

            <div class="text-center">
              <a href="/index" class="text-blue-500 dark:text-blue-300 hover:text-blue-700 dark:hover:text-blue-500 text-sm">Kembali ke halaman utama</a>
            </div>

          </form>
        </div>
      
        <div class="flex-1 flex items-center justify-center relative mt-6 md:mt-0">
          <img 
            src="/images/Gatot Kaca.png" 
            class="object-cover h-60 md:h-auto max-w-full md:max-w-80 md:w-full w-32 mb-10 lg:mt-20" 
            alt="Maskot Satria BIPA">
        </div>
      </div>
    </main>
    <!-- <%- include('partials/footer') %> -->
    <script>
      function togglePasswordVisibility(inputId, iconId) {
        const input = document.getElementById(inputId);
        const icon = document.getElementById(iconId);

        // Toggle input type between password and text
        const isPassword = input.type === "password";
        input.type = isPassword ? "text" : "password";

        // Change icon based on input type
        icon.src = isPassword ? "/images/eye-open.svg" : "/images/eye-close.svg";
      }

      document.getElementById("toggle-password").addEventListener("click", function () {
        togglePasswordVisibility("reset-password", "toggle-password");
      });

      document.getElementById("toggle-confirm-password").addEventListener("click", function () {
        togglePasswordVisibility("confirm-reset-password", "toggle-confirm-password");
      });


      document.getElementById('reset-password-form').addEventListener('submit', async function (event) {
        event.preventDefault();
        
        const password = document.getElementById('reset-password').value;
        const confirmPassword = document.getElementById('confirm-reset-password').value;

        if (!confirmPassword || !password) {
          Swal.fire({
            text: "Password harus diisi.",
            icon: "warning"
          });
          return;
        }

        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/;
        if (password.length < 8) {
          Swal.fire({
            text: "Password harus memiliki minimal 8 karakter.",
            icon: "warning"
          });
          return;
        }
        if (!/[a-z]/.test(password)) {
          Swal.fire({
            text: "Password harus mengandung minimal satu huruf kecil.",
            icon: "warning"
          });
          return;
        }
        if (!/[A-Z]/.test(password)) {
          Swal.fire({
            text: "Password harus mengandung minimal satu huruf kapital.",
            icon: "warning"
          });
          return;
        }
        if (!/\d/.test(password)) {
          Swal.fire({
            text: "Password harus mengandung minimal satu angka.",
            icon: "warning"
          });
          return;
        }
        if (!/[!@#$%^&*]/.test(password)) {
          Swal.fire({
            text: "Password harus mengandung minimal satu simbol: ! @ # $ % ^ & *",
            icon: "warning"
          });
          return;
        }
        if (!passwordRegex.test(password)) {
          Swal.fire({
            text: "Password tidak valid.",
            icon: "warning"
          });
          return;
        }
        if (password !== confirmPassword) {
          Swal.fire({
            text: "Password dan Konfirmasi Password harus sama.",
            icon: "error"
          });
          return;
        }
    
        const data = {
          token: `<%= token %>`,
          password: password
        };
                
        try {
          const response = await fetch('/reset-password-post', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });
          if (response.ok) {
            this.innerHTML = `
<h2 class="text-3xl font-bold mb-6 text-center mt-5 dark:text-white">Atur ulang sandi</h2>
<div role="alert" class="my-3 relative flex items-center w-full p-3 text-sm text-white dark:text-gray-800 bg-green-600 dark:bg-green-400 rounded-md">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 mr-3">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
              </svg>
              Sandi berhasil diatur ulang. Silakan &nbsp;<span><a href="/login" class="text-white dark:text-gray-800 hover:text-blue-700 dark:hover:text-blue-500 text-sm font-bold"> masuk</a></span>
            </div>`
            const responseData = await response.json();
            await new Promise(resolve => setTimeout(resolve, 2000));
            window.location.href = '/login';
          } else {
            console.error('Response error:', response);
            const errorData = await response.json();
            Swal.fire({
              text: 'Atur ulang sandi gagal. ' + (errorData.message || 'Kesalahan tidak diketahui.'),
              icon: "error"
            });
          }

        } catch (error) {
          Swal.fire({
            text: "Terjadi kesalahan, coba lagi nanti.",
            icon: "error"
          });
        }
      });

      document.getElementById('verifikasi-token-form').addEventListener('click', async function (event) {
        event.preventDefault();
        const token = `<%= token %>`;

        try {
          const response = await fetch(`/verify-change-password-token?token=${token}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          });
          if (response.ok) {
            const responseData = await response.json();
            document.getElementById('reset-password-form').style.display = 'block';
            this.style.display = 'none';
          } else {
            const errorData = await response.json();
            Swal.fire({
              text: errorData.message,
              icon: "error"
            });
          }
        } catch (error) {
          Swal.fire({
            text: "Terjadi kesalahan, coba lagi nanti.",
            icon: "error"
          });
        }

      });

      document.getElementById('reset-password-form').style.display = 'none';
    </script>    
</body>

</html>
