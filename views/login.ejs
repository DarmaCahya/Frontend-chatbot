<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Masuk Satria BIPA</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&display=swap" rel="stylesheet" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link id="sweetalert2-theme" rel="stylesheet">

    <script>
      tailwind.config = {
        darkMode: "class",
      };
    </script>
    <script>
      // Function to initialize and toggle dark mode
      function initMode() {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      }

      function toggleMode() {
        if (document.documentElement.classList.contains("dark")) {
          document.documentElement.classList.remove("dark");
          localStorage.theme = "light";
        } else {
          document.documentElement.classList.add("dark");
          localStorage.theme = "dark";
        }
      }

      document.addEventListener("DOMContentLoaded", function () {
        const burgerMenu = document.getElementById("burger-menu");
        const navLinks = document.getElementById("navbar-default");

        if (burgerMenu) { // Tambahkan kondisi ini
          burgerMenu.addEventListener("click", () => {
            navLinks.classList.toggle("hidden");
          });
        }

        initMode();
      });

      const setSweetAlertTheme = () => {
        const isDark = localStorage.getItem("theme");
        const themeLink = document.getElementById('sweetalert2-theme');

        if (isDark === "dark") {
          themeLink.href = "https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css";
        } else {
          themeLink.href = "";  // Tema default
        }
      };
    </script>

    <style>
      body {
        font-family: "Plus Jakarta Sans", sans-serif;
      }

      .login-btn:hover svg path{
        fill: white;
      }

      body[lang=en-GB]  [lang]:not([lang=en-GB]),
      body[lang=id-ID] [lang]:not([lang=id-ID]),
      body[lang=zh-HANT] [lang]:not([lang=zh-HANT]),
      body[lang=zh-HANS] [lang]:not([lang=zh-HANS])
      {
        display: none;
      }
    </style>
  </head>

  <body lang="id-ID" class="bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200 flex items-center justify-center min-h-screen">
  <%- include('partials/header') %>
    <main class=" dark:bg-gray-800 flex items-center justify-center w-full h-600 p-0 dark:border-gray-700 mt-12">
      <div class="relative flex flex-col md:flex-row w-full h-full border-l border-r border-gray dark:border-gray-700 bg-[url(/images/batik-bg.jpg)] dark:bg-none bg-cover ">
        <!-- Bagian kiri untuk form login -->
        <div class="flex-1 flex items-center justify-center p-8">
          <form id="login-form" class="w-full max-w-sm">
            <h2 class="text-3xl font-bold mb-6 text-center mt-5 dark:text-white"><%= i18n.t("login.title")%></h2>
            <div class="mb-4">
              <label class="block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2" for="email"><%= i18n.t("login.email")%></label>
              <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-900 dark:text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-white dark:bg-gray-700" id="email" type="text" placeholder="<%= i18n.t("login.email")%>">
            </div>
            <div class="mb-6">
              <label class="block text-gray-700 dark:text-gray-200 text-sm font-bold mb-2" for="password">
                <%= i18n.t("login.password")%>
              </label>
              <div class="relative">
                  <input
                      class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-900 dark:text-gray-200 leading-tight focus:outline-none focus:shadow-outline bg-white dark:bg-gray-700"
                      id="password"
                      type="password"
                      placeholder="********"
                  >
                  <!-- Icon Mata -->
                  <img
                      id="togglePassword"
                      src="/images/eye-close.svg"
                      alt="Toggle Password Visibility"
                      class="absolute right-3 top-3 cursor-pointer w-5 h-5"
                  />
              </div>
            </div>         
            <div class="flex items-center justify-between">
              <button class="bg-black dark:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full" type="submit"><%= i18n.t("login.title")%></button>
            </div>
            <div class="text-center flex flex-col">
              <a href="/register" class="text-blue-500 dark:text-blue-300 hover:text-blue-700 dark:hover:text-blue-400 text-sm my-1"><%= i18n.t("login.dont-have-account")%></a>
              <a href="/forgot-password" class="text-blue-500 dark:text-blue-300 hover:text-blue-700 dark:hover:text-blue-400 text-sm my-1"><%= i18n.t("login.forgot-password")%></a>
            </div>
          </form>
        </div>
      
        <div class="flex-1 flex items-center justify-center relative mt-6 md:mt-0">
          <img 
            src="/images/Gatot Kaca.png" 
            class="object-cover h-60 md:h-auto max-w-full md:max-w-80 md:w-full w-32 mb-10 lg:mt-20" 
            alt="Maskot Satria BIPA">
        </div>
      </div>
    </main>
    <!-- <%- include('partials/footer') %> -->
    <script>      
      const passwordInput = document.getElementById("password");
      const togglePasswordIcon = document.getElementById("togglePassword");

      togglePasswordIcon.addEventListener("click", function () {
        const isPassword = passwordInput.type === "password";
        passwordInput.type = isPassword ? "text" : "password";

        // Ubah ikon berdasarkan tipe input
        togglePasswordIcon.src = isPassword
          ? "/images/eye-open.svg" 
          : "/images/eye-close.svg"; 
      });

      const token = sessionStorage.getItem('token');
      if (token) {
        window.location.href = '/index';
        Swal.fire({
					text: `<%= i18n.t("login.still-logged-in")%>`,
					icon: "success",
          confirmButtonColor: '#7066e0'
				});
      }

      document.getElementById('login-form').addEventListener('submit', async function (event) {
        event.preventDefault();
        
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        if (!email || !password) {
          Swal.fire({
            text: `<%= i18n.t("login.fill-email-password")%>`,
            icon: "warning",
            confirmButtonColor: '#7066e0'
          });
          return;
        }
    
        const data = {
          email: email,
          password: password
        };
                
        try {
          const response = await fetch('/api/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });
          if (response.ok) {
            const responseData = await response.json();
            localStorage.setItem('token', responseData.token);
            sessionStorage.setItem('token', responseData.token);
            window.location.href = '/chats';
          } else {
            console.error('Response error:', response);
            const errorData = await response.json();
            Swal.fire({
              text: 'Masuk gagal: ' + (errorData.message || 'Kesalahan tidak diketahui.'),
              icon: "error",
              confirmButtonColor: '#7066e0'
            });
          }
        } catch (error) {
          Swal.fire({
            text: "Terjadi kesalahan, coba lagi nanti.",
            icon: "error",
            confirmButtonColor: '#7066e0'
          });
        }
      });
    </script>    
</body>

</html>
